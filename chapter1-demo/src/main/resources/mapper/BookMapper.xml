<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.individuals.dao.BookDao">

    <resultMap id="BaseResultMap" type="net.individuals.model.Book">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="bookName" property="bookname" jdbcType="VARCHAR"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="publisher" property="publisher" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="bookTypeId" property="booktypeid" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, bookName, author, publisher, price, bookTypeId
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_book
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_book
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="net.individuals.model.Book">
    insert into t_book (id, bookName, author, 
      publisher, price, bookTypeId
      )
    values (#{id,jdbcType=INTEGER}, #{bookname,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publisher,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{booktypeid,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="net.individuals.model.Book">
        insert into t_book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bookname != null">
                bookName,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="publisher != null">
                publisher,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="booktypeid != null">
                bookTypeId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="bookname != null">
                #{bookname,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="publisher != null">
                #{publisher,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="booktypeid != null">
                #{booktypeid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="net.individuals.model.Book">
        update t_book
        <set>
            <if test="bookname != null">
                bookName = #{bookname,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="publisher != null">
                publisher = #{publisher,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="booktypeid != null">
                bookTypeId = #{booktypeid,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.individuals.model.Book">
    update t_book
    set bookName = #{bookname,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      bookTypeId = #{booktypeid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getAll" parameterType="net.individuals.model.Book" resultMap="BaseResultMap">
        select * from t_book
    </select>

</mapper>